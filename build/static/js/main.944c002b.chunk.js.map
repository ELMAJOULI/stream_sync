{"version":3,"sources":["components/Navbar.js","components/App.js","utils/data_storage_utils.js","utils/webRTC_utils.js","components/Host.js","components/ChatBubble.js","components/Chat.js","components/Player.js","components/UserList.js","components/Party.js","components/Join.js","components/Router.js","serviceWorker.js","index.js"],"names":["Navbar","className","role","aria-label","href","src","width","height","alt","id","target","React","Component","App","store_data","key","data","localStorage","setItem","btoa","JSON","stringify","encode_base64","get_data","getItem","parse","atob","decode_base64","createConnection","thisObj","is_host","host_id","previous_id","Peer","window","settings","debug","host","port","path","iceTransportPolicy","config","iceServers","url","username","credential","peer","peer_obj","conn","connect","handle_connection","on","console","log","setState","peer_id","host_peer_id","peer_ids","push","data_type","chat_handler","connect_to_peer","global_this_obj","state","youtube_video_id","videoId","youtube_current_pos","Math","ceil","startSeconds","handle_youtube","connected_users","user_name","color_code","notify","data_key","value","update_data","handle_intro","user_list","handle_intro_init","data_handler","connections","setTimeout","send_data","event","yt_event","player","yt_player","getPlayerState","getVideoData","getCurrentTime","playbackRate","getPlaybackRate","fetch_current_video_status","msg","i","length","send","broadcast_new_connection","chat_data","chat_log","message","decodeURIComponent","escape","send_chat","msg_json","user_type","unescape","encodeURIComponent","time_stamp","Date","now","generate_chat_structure","Host","room_name","submitted","handleSubmit","e","preventDefault","video_id","parseIdFromURL","youtubeLink","userName","roomName","match","this","to","pathname","onSubmit","ref","roomNameRef","placeholder","type","name","required","hostUserName","youtubeLinkRef","ChatBubble","style","color","props","Chat","showEmojis","closeMenu","addEmoji","emoji","native","add_text","send_message","chatBottom","createRef","current","scrollIntoView","behavior","onClick","map","index","onSelect","el","emojiPicker","String","fromCodePoint","onChange","Player","loadScript","YT","loadVideo","tag","document","createElement","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","playerVars","autoplay","start","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","onPlaybackRateChange","onPlayerPlaybackRateChange","playVideo","UserList","avatars","user","title","backgroundColor","Party","invite_popup_shown","setUserName","floor","random","toString","introduce","copyToClipboard","copy_invite","select","execCommand","closeModal","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","params","reconnect_users","bulk_connect","Object","keys","newestOnTop","rtl","pauseOnFocusLoss","location","readOnly","Join","RoomId","Router","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.944c002b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/App.css\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav\n        className=\"navbar is-fixed-top\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item\" href=\"https://bulma.io\">\n            <img\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\n              width=\"112\"\n              height=\"28\"\n              alt=\"Logo\"\n            ></img>\n          </div>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item\">Home</div>\n          </div>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <div className=\"button is-primary\">\n                <strong>Buy me a coffee</strong>\n              </div>\n              <a href=\"/host\" target=\"_blank\" className=\"button is-light\">\n                Host\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Navbar from \"./Navbar\";\nfunction App() {\n  return (\n    <>\n    <Navbar></Navbar>\n\n      <div className=\"row\">\n        <a className=\"select_column host\" href=\"/host\">\n          Host\n        </a>\n        <a className=\"select_column join\" href=\"/join\">\n          Join\n        </a>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","export function encode_base64(data) {\n  return btoa(JSON.stringify(data));\n}\n\nexport function decode_base64(data) {\n  return JSON.parse(atob(data));\n}\n\nexport function store_data(key, data) {\n  localStorage.setItem(key, encode_base64(data));\n}\n\nexport function update_data(data_key, key, value) {\n  var data = get_data(data_key);\n  data[key] = value;\n  store_data(data_key, data);\n}\n\nexport function get_data(key) {\n  var data = localStorage.getItem(key);\n  if (data) {\n    return decode_base64(data);\n  }\n  return false;\n}\n","import { update_data } from \"./data_storage_utils\";\n\nexport var global_this_obj = null;\n\nexport function createConnection(\n  thisObj,\n  is_host,\n  host_id = null,\n  previous_id = null\n) {\n  const Peer = window.Peer;\n  const settings = {\n    debug: 2,\n    host: \"116.203.130.35\",\n    port: 9000,\n    path: \"/myapp\",\n    iceTransportPolicy: \"relay\",\n\n    config: {\n      iceServers: [\n        { url: \"stun:stun.l.google.com:19302\" },\n        {\n          url: \"turn:51.15.213.116:3478\",\n          username: \"nishit\",\n          credential: \"test123\"\n        }\n      ]\n    }\n  };\n\n  if (previous_id) {\n    var peer = new Peer(previous_id, settings);\n  } else {\n    var peer = new Peer(settings);\n  }\n\n  window.peer_obj = peer;\n  window.is_host = is_host;\n  if (is_host !== true) {\n    var conn = peer.connect(host_id);\n    handle_connection(conn);\n  }\n\n  peer.on(\"open\", function(id) {\n    console.log(\"MY peer ID is \" + peer.id);\n    thisObj.setState({\n      peer_id: peer.id\n    });\n    if (window.is_host === true) {\n      thisObj.setState({\n        host_peer_id: peer.id\n      });\n    }\n  });\n\n  //   Initializes connection\n  peer.on(\"connection\", function(conn) {\n    console.log(\"connection called\");\n    handle_connection(conn);\n  });\n}\n\nfunction handle_connection(conn) {\n  window.peer_ids.push(conn.peer);\n  conn.on(\"data\", function(data) {\n    console.log(\"data received\");\n    console.log(data);\n    data_handler(data);\n  });\n  console.log(\"Handled connection\");\n  conn.on(\"close\", function() {\n    conn = null;\n  });\n\n  window.connections.push(conn);\n\n  if (window.is_host === true) {\n    setTimeout(function() {\n      var msg_data = fetch_current_video_status();\n      send_data(msg_data);\n      var msg_user_list = {\n        data_type: \"user_list\",\n        user_list: window.global_this_obj.state.connected_users\n      };\n      send_data(msg_user_list);\n    }, 1500);\n    broadcast_new_connection(conn.peer);\n  }\n}\nfunction data_handler(data) {\n  console.log(\"Data received: \");\n  console.log(data);\n  if (typeof data === \"object\" && data !== null) {\n    if (data.data_type === \"chat\") {\n      chat_handler(data);\n    } else if (data.data_type === \"new_connection\") {\n      connect_to_peer(data.peer_id);\n    } else if (data.data_type === \"youtube\") {\n      handle_youtube(data);\n    } else if (data.data_type === \"intro\") {\n      handle_intro(data);\n    } else if (data.data_type === \"user_list\") {\n      handle_intro_init(data);\n    }\n  }\n}\n\nfunction send_data(data) {\n  console.log(\"Sending data: \");\n  console.log(data);\n  var connections = window.connections;\n  for (var i = 0; i < connections.length; i++) {\n    connections[i].send(data);\n  }\n}\n\nfunction broadcast_new_connection(peer_id) {\n  var msg = { data_type: \"new_connection\", peer_id: peer_id };\n  for (var i = 0; i < window.connections.length; i++) {\n    if (window.connections[i].peer === peer_id) {\n      continue;\n    }\n    window.connections[i].send(msg);\n  }\n}\n\nfunction connect_to_peer(peer_id) {\n  var conn = window.peer_obj.connect(peer_id);\n  handle_connection(conn);\n}\n\nexport function bulk_connect(peer_ids) {\n  for (let id in peer_ids) {\n    setTimeout(function() {\n      connect_to_peer(peer_ids[id]);\n    }, 500);\n  }\n}\n// Chat utils\nfunction chat_handler(chat_data) {\n  var chat_log = window.global_this_obj.state.chat_log;\n  chat_data.message = decodeURIComponent(\n    escape(window.atob(chat_data.message))\n  );\n\n  chat_log.push(chat_data);\n  window.global_this_obj.setState({\n    chat_log: chat_log\n  });\n}\n\nexport function send_chat(msg, user_name, is_host, color_code) {\n  var msg_json = generate_chat_structure(msg, user_name, is_host, color_code);\n  send_data(msg_json);\n  chat_handler(msg_json);\n}\n\nfunction generate_chat_structure(msg, user_name, is_host, color_code) {\n  var format = {\n    data_type: \"chat\",\n    user_name: user_name,\n    user_type: is_host ? \"Host\" : \"Client\",\n    message: btoa(unescape(encodeURIComponent(msg))),\n    color_code: color_code,\n    time_stamp: Date.now()\n  };\n  return format;\n}\n\n//  Youtube utils\n\nfunction handle_youtube(data) {\n  var state = window.global_this_obj.state;\n  if (state.youtube_video_id === \"\") {\n    window.global_this_obj.setState({\n      youtube_video_id: data.videoId,\n      youtube_current_pos: Math.ceil(data.startSeconds)\n    });\n  }\n}\n\nfunction fetch_current_video_status(event) {\n  var yt_event;\n  const player = window.yt_player;\n  if (event != null) {\n    yt_event = event;\n  } else {\n    yt_event = player.getPlayerState();\n  }\n  var videoId = player.getVideoData()[\"video_id\"];\n  var startSeconds = player.getCurrentTime();\n  var playbackRate = player.getPlaybackRate();\n\n  var payload = {\n    data_type: \"youtube\",\n    event: yt_event,\n    videoId: videoId,\n    startSeconds: startSeconds,\n    playbackRate: playbackRate\n  };\n\n  return payload;\n}\n// {\n//   \"data_type\": \"chat|youtube|webrtc\",\n//   \"user_name\": \"Nishit\",\n//   \"user_type\": \"Host|Client\",\n//   \"message\": \"Test\",\n//   \"time_stamp\": \"ISO timestamp\"\n// }\n\n// misc\n\nfunction handle_intro(data) {\n  var connected_users = window.global_this_obj.state.connected_users;\n  connected_users[data.peer_id] = {\n    user_name: data.user_name,\n    color_code: data.color_code\n  };\n  window.global_this_obj.setState({ connected_users: connected_users });\n  window.global_this_obj.notify(`${data.user_name} has joined the party`);\n  update_data(window.peer_obj.id, \"connected_users\", connected_users);\n}\n\nfunction handle_intro_init(data) {\n  window.global_this_obj.setState({ connected_users: data.user_list });\n}\n\nexport function introduce(user_name, color_code) {\n  var format = {\n    data_type: \"intro\",\n    user_name: user_name,\n    peer_id: window.peer_obj.id,\n    color_code: color_code,\n    time_stamp: Date.now()\n  };\n  send_data(format);\n}\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Navbar from \"./Navbar\";\nimport { createConnection } from \"../utils/webRTC_utils\";\nimport { Redirect } from \"react-router-dom\";\nimport { store_data } from \"../utils/data_storage_utils\";\nclass Host extends React.Component {\n  state = {\n    user_name: \"\",\n    room_name: \"\",\n    youtube_video_id: \"\",\n    host_peer_id: null,\n    is_host: true,\n    submitted: false\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    var video_id = this.parseIdFromURL(e.target.youtubeLink.value);\n\n    this.setState({\n      user_name: e.target.userName.value,\n      room_name: e.target.roomName.value,\n      youtube_video_id: video_id,\n      submitted: true\n    });\n    createConnection(this, true);\n  };\n  parseIdFromURL = url => {\n    var regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n    var match = url.match(regExp);\n    if (match && match[2].length === 11) {\n      return match[2];\n    } else {\n      return false;\n    }\n  };\n  render() {\n    console.log(this.state.host_peer_id);\n    if (this.state.host_peer_id) {\n      store_data(this.state.host_peer_id, this.state);\n\n      return (\n        <Redirect\n          push\n          to={{\n            pathname: \"party/\" + this.state.host_peer_id,\n            state: this.state\n          }}\n        ></Redirect>\n      );\n    }\n    return (\n      <>\n        <Navbar></Navbar>\n\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column is-half\">\n                <div className=\"card\">\n                  <div className=\"card-content\">\n                    <form onSubmit={this.handleSubmit} className=\"room_name\">\n                      <div className=\"field\">\n                        <label className=\"label\">RoomName</label>\n                        <div className=\"control\">\n                          <input\n                            className=\"input\"\n                            ref={this.roomNameRef}\n                            placeholder=\"Type the name of your room\"\n                            type=\"text\"\n                            name=\"roomName\"\n                            required\n                          ></input>\n                        </div>\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Username</label>\n                        <div className=\"control\">\n                          <input\n                            className=\"input\"\n                            ref={this.hostUserName}\n                            placeholder=\"Please enter your username\"\n                            type=\"text\"\n                            name=\"userName\"\n                            required\n                          ></input>\n                        </div>\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Youtube Link</label>\n                        <div className=\"control\">\n                          <input\n                            className=\"input\"\n                            ref={this.youtubeLinkRef}\n                            placeholder=\"The Youtube link to be shared\"\n                            type=\"url\"\n                            name=\"youtubeLink\"\n                            required\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"buttons is-right\">\n                        <button\n                          className={\n                            \"button is-primary is-right\" +\n                            (this.state.submitted ? \" is-loading\" : \"\")\n                          }\n                        >\n                          Party🎉{\" \"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Host;\n","import React from \"react\";\n\nclass ChatBubble extends React.Component {\n  render() {\n    return (\n      <div className=\"chat-bubble\">\n        <span\n          className=\"chat_user_name\"\n          style={{ color: \"#\" + this.props.chat_data.color_code }}\n        >\n          {this.props.chat_data.user_name}\n        </span>\n        {this.props.chat_data.message}\n      </div>\n    );\n  }\n}\n\nexport default ChatBubble;\n","import React from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { send_chat } from \"../utils/webRTC_utils\";\nimport ChatBubble from \"./ChatBubble\";\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chatBottom = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.chatBottom.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  state = {\n    showEmojis: false,\n    message: \"\"\n  };\n  showEmojis = e => {\n    this.setState({\n      showEmojis: true\n    });\n  };\n  closeMenu = () => {\n    this.setState({\n      showEmojis: false\n    });\n  };\n\n  addEmoji = e => {\n    let emoji = e.native;\n    this.setState({\n      message: this.state.message + emoji\n    });\n    this.closeMenu();\n  };\n\n  add_text = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  send_message = e => {\n    e.preventDefault();\n    if (this.state.message === \"\") {\n      return;\n    }\n    send_chat(\n      this.state.message,\n      this.props.user_name,\n      this.props.is_host,\n      this.props.color_code\n    );\n    this.setState({ message: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"box chat_box\" onClick={this.closeMenu}>\n          {this.props.chat_log.map((chat_data, index) => {\n            return <ChatBubble key={index} chat_data={chat_data}></ChatBubble>;\n          })}\n          <span ref={this.chatBottom} id=\"chat-bottom\" />\n        </div>\n        <form onSubmit={this.send_message}>\n          <div className=\"field is-grouped\">\n            <p className=\"\">\n              {this.state.showEmojis ? (\n                <>\n                  <Picker\n                    onSelect={this.addEmoji}\n                    ref={el => (this.emojiPicker = el)}\n                  />\n                  <button className=\"button emoji-button\">\n                    <span className=\"icon is-small\">\n                      <p onClick={this.closeMenu} className=\"emoji\">\n                        {\"❌\"}\n                      </p>\n                    </span>\n                  </button>\n                </>\n              ) : (\n                <button className=\"button emoji-button\">\n                  <span className=\"icon is-small\">\n                    <p onClick={this.showEmojis} className=\"emoji\">\n                      {String.fromCodePoint(0x1f60a)}\n                    </p>\n                  </span>\n                </button>\n              )}\n            </p>\n            <p className=\"control is-expanded\">\n              <input\n                className=\"input\"\n                value={this.state.message}\n                type=\"text\"\n                placeholder=\"Chat..\"\n                onChange={this.add_text}\n              />\n            </p>\n            <p className=\"control\">\n              <input className=\"button is-info\" type=\"submit\" value=\"send\"></input>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React from \"react\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      player: \"\"\n    };\n  }\n  componentDidUpdate() {\n    if (this.state.player === \"\" && this.props.youtube_video_id !== \"\") {\n      this.loadScript();\n    }\n  }\n  loadScript = () => {\n    if (!window.YT) {\n      // If not, load the script asynchronously\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } else {\n      // If script is already there, load the video directly\n      if (window.YT.Player) {\n        this.loadVideo();\n      }\n    }\n  };\n  loadVideo = () => {\n    this.state.player = new window.YT.Player(`youtube-player-iframe`, {\n      videoId: this.props.youtube_video_id,\n      playerVars: {\n        autoplay: 1,\n        start: Math.ceil(this.props.youtube_current_pos)\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange,\n        onPlaybackRateChange: this.onPlayerPlaybackRateChange\n      }\n    });\n    window.yt_player = this.state.player;\n  };\n\n  onPlayerReady = event => {\n    event.target.playVideo();\n  };\n  onPlayerStateChange = event => {\n    console.log(event);\n  };\n  onPlaybackRateChange = event => {\n    console.log(event);\n  };\n  render() {\n    // if (!this.props.youtube_video_id) {\n    //   return <div>Video not loaded</div>;\n    // }\n    return (\n      <div className=\"player_container\">\n        <div id={`youtube-player-iframe`} />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React from \"react\";\n\nclass UserList extends React.Component {\n  render() {\n    var connected_users = this.props.connected_users;\n    if (!connected_users) {\n      connected_users = {};\n    }\n\n    var avatars = [];\n    for (const key in connected_users) {\n      var user = connected_users[key];\n      avatars.push(\n        <div\n          key={key}\n          className=\"avatar\"\n          title={user.user_name}\n          style={{ backgroundColor: \"#\" + user.color_code }}\n        >\n          {user.user_name[0]} \n        </div>\n      );\n    }\n    return (\n      <div className=\"box info_box\">\n        <h4>Connected Users</h4>\n        <div className=\"avatar_container\">{avatars}</div>\n      </div>\n    );\n  }\n}\n\nexport default UserList;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Chat from \"./Chat\";\nimport Player from \"./Player\";\nimport UserList from \"./UserList\";\n\nimport { get_data } from \"../utils/data_storage_utils\";\nimport {\n  createConnection,\n  introduce,\n  bulk_connect\n} from \"../utils/webRTC_utils\";\nimport { ToastContainer, toast } from \"react-toastify\";\n// css\nimport \"../css/App.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\nclass Party extends React.Component {\n  state = {\n    user_name: \"\",\n    room_name: \"\",\n    youtube_video_id: \"\",\n    youtube_current_pos: 0,\n    peer_id: \"\",\n    is_host: false,\n    chat_log: [],\n    invite_popup_shown: false,\n    connected_users: {},\n    color_code: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n    window.global_this_obj = this;\n    window.peer_ids = [];\n    window.connections = [];\n  }\n\n  componentDidMount() {\n    var data = get_data(this.props.match.params.host_id);\n    const color_code = Math.floor(Math.random() * 16777215).toString(16);\n    // i.e if host\n    if (data) {\n      if (!window.peer_obj) {\n        createConnection(this, true, null, this.props.match.params.host_id);\n      }\n\n      if (!data.connected_users) {\n        var connected_users = {};\n        connected_users[this.props.match.params.host_id] = {\n          user_name: data.user_name,\n          color_code: color_code,\n          is_host: true\n        };\n      } else {\n        var connected_users = data.connected_users;\n        // https://stackoverflow.com/questions/38416020/deep-copy-in-es6-using-the-spread-syntax\n        var reconnect_users = JSON.parse(JSON.stringify(connected_users));\n\n        delete reconnect_users[this.props.match.params.host_id];\n        bulk_connect(Object.keys(reconnect_users));\n      }\n\n      this.setState({\n        peer_id: this.props.match.params.host_id,\n        user_name: data.user_name,\n        youtube_video_id: data.youtube_video_id,\n        room_name: data.room_name,\n        is_host: data.is_host,\n        connected_users: connected_users,\n        color_code: color_code\n      });\n    } else {\n      // Not a host: Create connection\n      createConnection(this, false, this.props.match.params.host_id);\n    }\n  }\n\n  setUserName = e => {\n    e.preventDefault();\n    const color_code = Math.floor(Math.random() * 16777215).toString(16);\n    var connected_users = this.state.connected_users;\n    connected_users[this.state.peer_id] = {\n      user_name: e.target.user_name.value,\n      color_code: color_code,\n      is_host: false\n    };\n    this.setState({\n      user_name: e.target.user_name.value,\n      connected_users: connected_users,\n      color_code: color_code\n    });\n    introduce(e.target.user_name.value, color_code);\n  };\n\n  copyToClipboard = e => {\n    e.preventDefault();\n    this.copy_invite.select();\n    document.execCommand(\"copy\");\n    this.setState({ invite_popup_shown: true });\n  };\n\n  closeModal = e => {\n    this.setState({ invite_popup_shown: true });\n  };\n\n  notify = message => {\n    toast.info(message, {\n      position: \"bottom-left\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar></Navbar>\n        <ToastContainer\n          position=\"bottom-left\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div\n          className={\n            \"modal   \" + (this.state.user_name === \"\" ? \"is-active\" : \"\")\n          }\n        >\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <div className=\"box\">\n              <form onSubmit={this.setUserName}>\n                <div className=\"field is-grouped\">\n                  <p className=\"control is-expanded\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"user_name\"\n                      placeholder=\"Enter Your Username\"\n                      required\n                    />\n                  </p>\n                  <p className=\"control\">\n                    <button className=\"button is-primary is-light is-right\">\n                      Party{\" \"}\n                      <span role=\"img\" aria-label=\"party_emoji\">\n                        🎉\n                      </span>\n                    </button>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n          <button className=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n\n        <div\n          className={\n            \"modal \" +\n            (this.state.invite_popup_shown === false &&\n            this.state.is_host === true\n              ? \"is-active\"\n              : \"\")\n          }\n        >\n          <div className=\"modal-background\" onClick={this.closeModal}></div>\n          <div className=\"modal-content\">\n            <div className=\"box\">\n              <form onSubmit={this.copyToClipboard}>\n                <label>Share the link with friends to stream together</label>\n\n                <div className=\"field is-grouped\">\n                  <p className=\"control is-expanded\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      value={window.location.href}\n                      name=\"invite_link\"\n                      readOnly\n                      ref={copy_invite => (this.copy_invite = copy_invite)}\n                    />\n                  </p>\n                  <p className=\"control\">\n                    <button className=\"button is-primary is-light is-right\">\n                      Copy to clipboard\n                      <span role=\"img\" aria-label=\"cliboard_emoji\">\n                        📋\n                      </span>\n                    </button>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n          <button\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n            onClick={this.closeModal}\n          ></button>\n        </div>\n\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"tile is-ancestor\">\n              <div className=\"tile is-8 left_tile_custom\">\n                <Player\n                  youtube_video_id={this.state.youtube_video_id}\n                  youtube_current_pos={this.state.youtube_current_pos}\n                ></Player>\n                <UserList\n                  connected_users={this.state.connected_users}\n                ></UserList>\n              </div>\n              <div className=\"tile\">\n                <Chat\n                  user_name={this.state.user_name}\n                  chat_log={this.state.chat_log}\n                  is_host={this.state.is_host}\n                  color_code={this.state.color_code}\n                ></Chat>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Party;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Join extends React.Component {\n  state = {\n    RoomId: \"\"\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ RoomId: e.target.RoomId.value });\n  };\n  render() {\n    if (this.state.RoomId !== \"\") {\n      return (\n        <Redirect\n          push\n          to={{\n            pathname: \"party/\" + this.state.RoomId,\n            state: this.state\n          }}\n        ></Redirect>\n      );\n    }\n    return (\n      <>\n        <Navbar></Navbar>\n\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column is-half\">\n                <div className=\"card\">\n                  <div className=\"card-content\">\n                    <form onSubmit={this.handleSubmit} className=\"room_name\">\n                      <div className=\"field\">\n                        <label className=\"label\">RoomId</label>\n                        <div className=\"control\">\n                          <input\n                            className=\"input\"\n                            ref={this.roomNameRef}\n                            placeholder=\"Type the name of your room\"\n                            type=\"text\"\n                            name=\"RoomId\"\n                            required\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"buttons is-right\">\n                        <button className={\"button is-primary is-right\"}>\n                          Party🎉{\" \"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Join;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport Host from \"./Host\";\nimport Party from \"./Party\";\nimport Join from \"./Join\";\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/host\" component={Host} />\n      <Route exact path=\"/join\" component={Join} />\n      <Route exact path=\"/party\" component={Host} />\n      <Route exact path=\"/party/:host_id\" component={Party} />\n    </Switch>\n  </BrowserRouter>\n);\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}